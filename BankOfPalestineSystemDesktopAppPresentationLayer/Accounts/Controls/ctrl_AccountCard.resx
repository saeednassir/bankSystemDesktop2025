<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        0AAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="guna2PictureBox10.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        0AAAAABJRU5ErkJggg==
</value>
  </data>
</root>